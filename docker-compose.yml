services:
   auth-service:
      build: ./auth-service
      ports:
         - 5006:5006
      environment:
         - JWT_SECRET=${JWT_SECRET}
         - USER_SERVICE_GRPC_URI=user-service:50051
      networks:
         - ecommerce-network
      deploy:
         resources:
            limits:
               cpus: "1.0"
               memory: 500mb

   user-service:
      build: ./user-service
      ports:
         - 5000:5000
         - 50051:50051
      environment:
         - MONGO_URI=mongodb://mongo-users:27017/ecommerce-users
         - JWT_SECRET=${JWT_SECRET}
      networks:
         - ecommerce-network
      depends_on:
         - mongo-users
      deploy:
         resources:
            limits:
               cpus: "1.0"
               memory: 500mb
      # deploy:
      #   replicas: 2

   product-service:
      build: ./product-service
      environment:
         - MONGO_URI=mongodb://mongo-products:27017/ecommerce-products
      networks:
         - ecommerce-network
      depends_on:
         - mongo-products
      deploy:
         replicas: 6
         resources:
            limits:
               cpus: "1.0"
               memory: 500mb
   shopping-cart-service:
      build: ./shopping-cart-service
      environment:
         - MONGO_URI=mongodb://mongo-cart:27017/ecommerce-cart
         - PRODUCT_SERVICE_URI=http://product-service:5001
         - PORT=5002
      networks:
         - ecommerce-network
      depends_on:
         - mongo-cart
      deploy:
         resources:
            limits:
               cpus: "2.0"
               memory: 1G

   order-service:
      build: ./order-service
      environment:
         - MONGO_URI=mongodb://mongo-orders:27017/ecommerce-orders
         - PRODUCT_SERVICE_URI=http://product-service:5001
      networks:
         - ecommerce-network
      depends_on:
         - mongo-orders
      deploy:
         replicas: 3
         resources:
            limits:
               cpus: "1.0"
               memory: 500mb

   payment-service:
      build: ./payment-service
      environment:
         - MONGO_URI=mongodb://mongo-payments:27017/ecommerce-payments
         - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      networks:
         - ecommerce-network
      depends_on:
         - mongo-payments
      # deploy:
      #   replicas: 2

   notification-service:
      build: ./notification-service
      environment:
         - NODEMAILER_EMAIL=${NODEMAILER_EMAIL}
         - NODEMAILER_PASSWORD=${NODEMAILER_PASSWORD}
         - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
         - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
         - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
      networks:
         - ecommerce-network

   # Separate MongoDB instances for each service
   mongo-users:
      image: mongo:latest
      ports:
         - "27017:27017"
      volumes:
         - mongo-users-data:/data/db
      networks:
         - ecommerce-network
      deploy:
         resources:
            limits:
               cpus: "0.5"
               memory: 512M

   mongo-products:
      image: mongo:latest
      ports:
         - "27018:27017"
      volumes:
         - mongo-products-data:/data/db
      networks:
         - ecommerce-network
      deploy:
         resources:
            limits:
               cpus: "1.0"
               memory: 1G

   mongo-cart:
      image: mongo:latest
      ports:
         - "27019:27017"
      volumes:
         - mongo-cart-data:/data/db
      networks:
         - ecommerce-network
      deploy:
         resources:
            limits:
               cpus: "0.5"
               memory: 512M

   mongo-orders:
      image: mongo:latest
      ports:
         - "27020:27017"
      volumes:
         - mongo-orders-data:/data/db
      networks:
         - ecommerce-network
      deploy:
         resources:
            limits:
               cpus: "0.5"
               memory: 512M

   mongo-payments:
      image: mongo:latest
      ports:
         - "27021:27017"
      volumes:
         - mongo-payments-data:/data/db
      networks:
         - ecommerce-network
      deploy:
         resources:
            limits:
               cpus: "0.5"
               memory: 512M

   client:
      build: ./client
      ports:
         - "3000:3000"

      networks:
         - ecommerce-network
      depends_on:
         - nginx

   nginx:
      image: nginx:latest
      ports:
         - "80:80"
      volumes:
         - ./nginx.conf:/etc/nginx/nginx.conf
      networks:
         - ecommerce-network
      depends_on:
         - user-service
         - product-service
         - shopping-cart-service
         - order-service
         - payment-service
      deploy:
         resources:
            limits:
               cpus: "1.0"
               memory: 500mb
   cadvisor:
      image: gcr.io/cadvisor/cadvisor:latest
      container_name: cadvisor
      ports:
         - "8080:8080"
      volumes:
         - /:/rootfs:ro
         - /var/run:/var/run:ro
         - /sys:/sys:ro
         - /var/lib/docker/:/var/lib/docker:ro
      networks:
         - ecommerce-network
   prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      ports:
         - "9090:9090"
      volumes:
         - ./prometheus.yml:/etc/prometheus/prometheus.yml
      depends_on:
         - cadvisor
      networks:
         - ecommerce-network
   # influxdb:
   #   image: influxdb:1.8
   #   container_name: influxdb
   #   ports:
   #     - "8086:8086"
   #   environment:
   #     - INFLUXDB_DATA_MAX_SERIES_PER_DATABASE=0
   #     - INFLUXDB_DATA_MAX_VALUES_PER_TAG=0
   #   volumes:
   #     - influxdb-data:/var/lib/influxdb
   #   networks:
   #     - ecommerce-network
   grafana:
      image: grafana/grafana:latest
      container_name: grafana-ktpm-ecom
      ports:
         - "1000:3000"
      depends_on:
         - prometheus
      networks:
         - ecommerce-network
      volumes:
         - grafana-data:/var/lib/grafana

volumes:
   mongo-users-data: {}
   mongo-products-data: {}
   mongo-cart-data: {}
   mongo-orders-data: {}
   mongo-payments-data: {}
   influxdb-data: {}
   grafana-data: {}

networks:
   ecommerce-network:
      driver: bridge
